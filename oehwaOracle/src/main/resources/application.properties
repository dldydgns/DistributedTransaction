spring.application.name=oehwaOracle

# Oracle JDBC 접속 정보
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=scott
spring.datasource.password=tiger
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

#true 설정 시 jpa 쿼리문 확인 가능
spring.jpa.show-sql=true

#DDL 정의시 DB의 고유 기능을 사용 가능
spring.jpa.hibernate.ddl-auto=update

# JPA의 구현체인 Hibernate가 동작하면서 발생한 SQL의 가독성을 높여줌
spring.jpa.properties.hibernate.format_sql=true
debug=true

# 태우씨 주소로 변경 예정 192.168.0.44
# Kafka 공통 설정
spring.kafka.bootstrap-servers=192.168.0.44:9092

# Producer 설정
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer 설정
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# 중요한 부분: DepositDTO 클래스가 포함된 패키지 등록
spring.kafka.consumer.properties.spring.json.trusted.packages=com.fisa.entity